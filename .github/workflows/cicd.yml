name: CI/CD Scheduler

on:
  push:
    branches: [ "main" ]

jobs:
  build-and-push:
    name: Build & Push image to GHCR
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: GHCR Login (uses GITHUB_TOKEN)
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Extract metadata (tags/labels)
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: ghcr.io/${{ github.repository_owner }}/distriapp-crons
          tags: |
            type=raw,value=scheduler-latest
            type=sha,format=short,prefix=scheduler-


      - name: Build & Push
        uses: docker/build-push-action@v6
        with:
          context: .
          push: true
          platforms: linux/amd64
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}

  deploy:
    name: Deploy on Droplet
    needs: build-and-push
    runs-on: ubuntu-latest
    steps:
      - name: SSH into Droplet and deploy
        uses: appleboy/ssh-action@v1.0.3
        with:
          host: ${{ secrets.DO_HOST }}
          username: ${{ secrets.DO_USER }}
          key: ${{ secrets.DO_SSH_KEY }}
          script: |
            set -e
            docker login ghcr.io -u ${{ secrets.GHCR_USER }} -p ${{ secrets.GHCR_TOKEN }}
            cd /var/www/html/drosalud-app/Distriapp-crons
            # aseg√∫rate de que estos archivos existen en el droplet
            test -f docker-compose.prod.yml
            test -f .env
            docker compose -f docker-compose.prod.yml pull
            docker compose -f docker-compose.prod.yml up -d --remove-orphans --force-recreate
            docker image prune -f
